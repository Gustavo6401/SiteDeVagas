// <auto-generated />
using System;
using GustaVagas.Infra.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GustaVagas.Infra.Migrations
{
    [DbContext(typeof(VagasContext))]
    [Migration("20210630230504_LocateAJob")]
    partial class LocateAJob
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GustaVagas.Domain.Entities.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameArea")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.AreaUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<Guid?>("AreaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AreaId1");

                    b.HasIndex("UserId1");

                    b.ToTable("AreaUser");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoCandidato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("Empresa")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Escolaridade")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("EstaContratado")
                        .HasColumnType("bit");

                    b.Property<string>("Github")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("PretencaoSalarialMaxima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PretencaoSalarialMinima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Senioridade")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TelefoneFixo")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YouTube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Candidatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidatoPJId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DePJ")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EnterpriseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdCandidato")
                        .HasColumnType("int");

                    b.Property<int>("IdOferecedor")
                        .HasColumnType("int");

                    b.Property<int>("IdVaga")
                        .HasColumnType("int");

                    b.Property<Guid?>("OferecedorPFId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ParaPJ")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VagaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CandidatoPJId");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("OferecedorPFId");

                    b.HasIndex("VagaId");

                    b.ToTable("Candidatura");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.CargoUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CargoId");

                    b.ToTable("CargoUser");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Enterprise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EMail")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("País")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Rua")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Enterprise");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Formacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Grau")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdCandidato")
                        .HasColumnType("int");

                    b.Property<string>("Insituicao")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TipoEnsino")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("Formacao");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Comeco")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PessoaJuridica")
                        .HasColumnType("bit");

                    b.Property<bool>("TemCliente")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Vaga", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EnterpriseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Escolaridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoVaga")
                        .HasColumnType("int");

                    b.Property<bool>("Freelance")
                        .HasColumnType("bit");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<int>("IdCargo")
                        .HasColumnType("int");

                    b.Property<int>("IdEnterprise")
                        .HasColumnType("int");

                    b.Property<string>("LocalEntrevista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumeroVagas")
                        .HasColumnType("int");

                    b.Property<bool>("PessoaJuridica")
                        .HasColumnType("bit");

                    b.Property<bool>("Remoto")
                        .HasColumnType("bit");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Senioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Temporario")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CargoId");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Vaga");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.AreaUser", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId1");

                    b.HasOne("GustaVagas.Domain.Entities.Usuario", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("Area");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Candidate", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Candidatura", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Candidate", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoId");

                    b.HasOne("GustaVagas.Domain.Entities.Enterprise", "CandidatoPJ")
                        .WithMany()
                        .HasForeignKey("CandidatoPJId");

                    b.HasOne("GustaVagas.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId");

                    b.HasOne("GustaVagas.Domain.Entities.Candidate", "OferecedorPF")
                        .WithMany()
                        .HasForeignKey("OferecedorPFId");

                    b.HasOne("GustaVagas.Domain.Entities.Vaga", "Vaga")
                        .WithMany()
                        .HasForeignKey("VagaId");

                    b.Navigation("Candidato");

                    b.Navigation("CandidatoPJ");

                    b.Navigation("Enterprise");

                    b.Navigation("OferecedorPF");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Cargo", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.CargoUser", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");

                    b.HasOne("GustaVagas.Domain.Entities.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.Navigation("Candidate");

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Enterprise", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Formacao", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Project", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("GustaVagas.Domain.Entities.Candidate", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoId");

                    b.HasOne("GustaVagas.Domain.Entities.Enterprise", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Area");

                    b.Navigation("Candidato");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GustaVagas.Domain.Entities.Vaga", b =>
                {
                    b.HasOne("GustaVagas.Domain.Entities.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("GustaVagas.Domain.Entities.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("GustaVagas.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId");

                    b.Navigation("Area");

                    b.Navigation("Cargo");

                    b.Navigation("Enterprise");
                });
#pragma warning restore 612, 618
        }
    }
}
